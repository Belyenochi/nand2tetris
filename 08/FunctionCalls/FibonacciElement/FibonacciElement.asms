@256
                                                D=A
                                                @SP
                                                M=D
// call Sys.init
@return-address-Sys.init1
                     D=A
                     @SP
                     A=M
                     M=D
                     @SP
                     M=M+1
                     @LCL
                     D=M
                     @SP
                     A=M
                     M=D
                     @SP
                     M=M+1
                     @ARG
                     D=M
                     @SP
                     A=M
                     M=D
                     @SP
                     M=M+1
                     @THIS
                     D=M
                     @SP
                     A=M
                     M=D
                     @SP
                     M=M+1
                     @THAT
                     D=M
                     @SP
                     A=M
                     M=D
                     @SP
                     M=M+1
                     @0
                     D=A
                     @13
                     M=D
                     @5
                     D=A
                     @13
                     M=D+M
                     @SP
                     D=M
                     @ARG
                     M=D
                     @13
                     D=M
                     @ARG
                     M=M-D
                     @SP
                     D=M
                     @LCL
                     M=D
                     @Sys.init
                     D;JMP
                     (return-address-Sys.init1)
// function Main.fibonacci 0
(Main.fibonacci)
                     @0
                     D=A
                     @13
                     M=D
                     @i
                     M=0
                     (Main.fibonacci$LOOP)
                     @13
                     D=M-1
                     M=M-1
                     @Main.fibonacci$END
                     D;JLT
                     @i
                     D=M
                     @LCL
                     A=M+D
                     M=0
                     @i
                     M=M+1
                     @SP
                     M=M+1
                     @Main.fibonacci$LOOP
                     1;JMP
                     (Main.fibonacci$END)
// push argument 0
@0
                                    D=A
                                    @ARG
                                    A=D+M
                                    D=M
                                    @SP
                                    A=M
                                    M=D
                                    @SP
                                    M=M+1
// push constant 2
@2
                                    D=A
                                    @SP
                                    A=M
                                    M=D
                                    @SP
                                    M=M+1
// lt
@SP
                             A = M-1
                             D=M
                             @SP
                             M=M-1
                             @13
                             M=D
                             @SP
                             A=M-1
                             D=M
                             @SP
                             M=M-1
                             @13
                             D=D-M
                             @SP
                             A=M
                             M=0
                             @END2
                             D;JGE
                             @SP
                             A=M
                             M=-1
                             (END2)
                             @SP
                             M=M+1
// if-goto IF_TRUE
@SP
                     A=M-1
                     D=M
                     @SP
                     M=M-1
                     @IF_TRUE
                     D;JNE
// goto IF_FALSE
@IF_FALSE
                     D;JMP
// label IF_TRUE
(IF_TRUE)
// push argument 0
@0
                                    D=A
                                    @ARG
                                    A=D+M
                                    D=M
                                    @SP
                                    A=M
                                    M=D
                                    @SP
                                    M=M+1
// return
@LCL
                     D=M
                     @13
                     M=D
                     @5
                     D=D-A
                     A=D
                     D=M
                     @14
                     M=D
                     @SP
                     A=M-1
                     D=M
                     @ARG
                     A=M
                     M=D
                     @ARG
                     D=M+1
                     @SP
                     M=D
                     @1
                     D=A
                     @13
                     A=M-D
                     D=M
                     @THAT
                     M=D
                     @2
                     D=A
                     @13
                     A=M-D
                     D=M
                     @THIS
                     M=D
                     @3
                     D=A
                     @13
                     A=M-D
                     D=M
                     @ARG
                     M=D
                     @4
                     D=A
                     @13
                     A=M-D
                     D=M
                     @LCL
                     M=D
                     @14
                     A=M
                     D;JMP
// label IF_FALSE
(IF_FALSE)
// push argument 0
@0
                                    D=A
                                    @ARG
                                    A=D+M
                                    D=M
                                    @SP
                                    A=M
                                    M=D
                                    @SP
                                    M=M+1
// push constant 2
@2
                                    D=A
                                    @SP
                                    A=M
                                    M=D
                                    @SP
                                    M=M+1
// sub
@SP
                            A=M-1
                            D=M
                            @SP
                            M=M-1
                            @13
                            M=D
                            @SP
                            A=M-1
                            D=M
                            @SP
                            M=M-1
                            @13
                            D=D-M
                            @SP
                            A=M
                            M=D
                            @SP
                            M=M+1
// call Main.fibonacci 1
@return-address-Main.fibonacci3
                     D=A
                     @SP
                     A=M
                     M=D
                     @SP
                     M=M+1
                     @LCL
                     D=M
                     @SP
                     A=M
                     M=D
                     @SP
                     M=M+1
                     @ARG
                     D=M
                     @SP
                     A=M
                     M=D
                     @SP
                     M=M+1
                     @THIS
                     D=M
                     @SP
                     A=M
                     M=D
                     @SP
                     M=M+1
                     @THAT
                     D=M
                     @SP
                     A=M
                     M=D
                     @SP
                     M=M+1
                     @1
                     D=A
                     @13
                     M=D
                     @5
                     D=A
                     @13
                     M=D+M
                     @SP
                     D=M
                     @ARG
                     M=D
                     @13
                     D=M
                     @ARG
                     M=M-D
                     @SP
                     D=M
                     @LCL
                     M=D
                     @Main.fibonacci
                     D;JMP
                     (return-address-Main.fibonacci3)
// push argument 0
@0
                                    D=A
                                    @ARG
                                    A=D+M
                                    D=M
                                    @SP
                                    A=M
                                    M=D
                                    @SP
                                    M=M+1
// push constant 1
@1
                                    D=A
                                    @SP
                                    A=M
                                    M=D
                                    @SP
                                    M=M+1
// sub
@SP
                            A=M-1
                            D=M
                            @SP
                            M=M-1
                            @13
                            M=D
                            @SP
                            A=M-1
                            D=M
                            @SP
                            M=M-1
                            @13
                            D=D-M
                            @SP
                            A=M
                            M=D
                            @SP
                            M=M+1
// call Main.fibonacci 1
@return-address-Main.fibonacci4
                     D=A
                     @SP
                     A=M
                     M=D
                     @SP
                     M=M+1
                     @LCL
                     D=M
                     @SP
                     A=M
                     M=D
                     @SP
                     M=M+1
                     @ARG
                     D=M
                     @SP
                     A=M
                     M=D
                     @SP
                     M=M+1
                     @THIS
                     D=M
                     @SP
                     A=M
                     M=D
                     @SP
                     M=M+1
                     @THAT
                     D=M
                     @SP
                     A=M
                     M=D
                     @SP
                     M=M+1
                     @1
                     D=A
                     @13
                     M=D
                     @5
                     D=A
                     @13
                     M=D+M
                     @SP
                     D=M
                     @ARG
                     M=D
                     @13
                     D=M
                     @ARG
                     M=M-D
                     @SP
                     D=M
                     @LCL
                     M=D
                     @Main.fibonacci
                     D;JMP
                     (return-address-Main.fibonacci4)
// add
@SP
                            A=M-1
                            D=M
                            @SP
                            M=M-1
                            @13
                            M=D
                            @SP
                            A=M-1
                            D=M
                            @SP
                            M=M-1
                            @13
                            D=D+M
                            @SP
                            A=M
                            M=D
                            @SP
                            M=M+1
// return
@LCL
                     D=M
                     @13
                     M=D
                     @5
                     D=D-A
                     A=D
                     D=M
                     @14
                     M=D
                     @SP
                     A=M-1
                     D=M
                     @ARG
                     A=M
                     M=D
                     @ARG
                     D=M+1
                     @SP
                     M=D
                     @1
                     D=A
                     @13
                     A=M-D
                     D=M
                     @THAT
                     M=D
                     @2
                     D=A
                     @13
                     A=M-D
                     D=M
                     @THIS
                     M=D
                     @3
                     D=A
                     @13
                     A=M-D
                     D=M
                     @ARG
                     M=D
                     @4
                     D=A
                     @13
                     A=M-D
                     D=M
                     @LCL
                     M=D
                     @14
                     A=M
                     D;JMP
// function Sys.init 0
(Sys.init)
                     @0
                     D=A
                     @13
                     M=D
                     @i
                     M=0
                     (Sys.init$LOOP)
                     @13
                     D=M-1
                     M=M-1
                     @Sys.init$END
                     D;JLT
                     @i
                     D=M
                     @LCL
                     A=M+D
                     M=0
                     @i
                     M=M+1
                     @SP
                     M=M+1
                     @Sys.init$LOOP
                     1;JMP
                     (Sys.init$END)
// push constant 4
@4
                                    D=A
                                    @SP
                                    A=M
                                    M=D
                                    @SP
                                    M=M+1
// call Main.fibonacci 1
@return-address-Main.fibonacci5
                     D=A
                     @SP
                     A=M
                     M=D
                     @SP
                     M=M+1
                     @LCL
                     D=M
                     @SP
                     A=M
                     M=D
                     @SP
                     M=M+1
                     @ARG
                     D=M
                     @SP
                     A=M
                     M=D
                     @SP
                     M=M+1
                     @THIS
                     D=M
                     @SP
                     A=M
                     M=D
                     @SP
                     M=M+1
                     @THAT
                     D=M
                     @SP
                     A=M
                     M=D
                     @SP
                     M=M+1
                     @1
                     D=A
                     @13
                     M=D
                     @5
                     D=A
                     @13
                     M=D+M
                     @SP
                     D=M
                     @ARG
                     M=D
                     @13
                     D=M
                     @ARG
                     M=M-D
                     @SP
                     D=M
                     @LCL
                     M=D
                     @Main.fibonacci
                     D;JMP
                     (return-address-Main.fibonacci5)
// label WHILE
(WHILE)
// goto WHILE
@WHILE
                     D;JMP
(END6)
                                @END6
                                1;JMP
